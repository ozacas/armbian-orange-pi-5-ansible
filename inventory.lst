[all]
t6 ansible_host=192.168.2.193 hostname=t6.lan firewall_script=templates/firewalls/t6.sh nfs_mounts='[{"mount": "/nfs", "svr_path": "192.168.2.173:/edge-data", "fstype": "nfs4" }]' 
opi ansible_host=192.168.2.146 hostname=opi.lan firewall_script=templates/firewalls/opi.sh 
opi2 ansible_host=192.168.2.173 hostname=opi2.lan firewall_script=templates/firewalls/opi2.sh nfs_exports='[{"path": "/export/edge-data", "cidr": "192.168.2.0/24", "opts": "rw,sync,no_subtree_check", "owner": "acas", "group": "acas"}, {"path": "/export", "cidr": "192.168.2.0/24"}]'
rock-5b-plus ansible_host=192.168.2.198 hostname=rock-5b-plus.lan firewall_script=templates/firewalls/rock-5b-plus.sh nfs_mounts='[{"mount": "/nfs", "svr_path": "192.168.2.173:/edge-data", "fstype": "nfs4" }]' ansible_become=yes
edge ansible_host=192.168.2.242 hostname=edge.lan firewall_script=templates/firewalls/edge2.sh

[desktops]
#t6
edge
# desktop is already baked into this image, so no change
#rock-5b-plus

#[kodi]
#t6 kodi_flatpak=yes

#[wazuh_manager]
#opi

# disabled now that service is running, we dont want to "clean slate" it for now...
#[mosquitto]
#opi2

[lg]

[mosquitto:vars]
mosquitto_additional_clients='["hplappie.lan", "firewall.lan", "t6.lan", "opi.lan", "rock5b-plus.lan", "woodend.lan"]'
mosquitto_fqdn=opi2.lan 
tls_cert_days=3650 
tls_ca_days=3650 

[all:vars]
ansible_ssh_user=acas
timezone=UTC
normal_user=acas
#user_ssh_authorized_key=
#ssh_fs_mount_directory: <SSHFS directory to mount, ex: /mnt/shared> #Use by sshfs role
#ssh_fs_mount_connection: <SSHFS connection, ex: user@host:/your/directory/shared> #Used by sshfs role
#lgtv_configuration: <if you want to control your lgtv remotely, ex: '{"MyTV": {"key": "xxxxxxxxxxxxxxxxxx", "mac": "xx:xx:xx:xx:xx:xx", "ip": "192.168.N.N", "hostname": "192.168.N.N"}}'
extra_software=["vim", "armbian-config", "dnsutils", "bind9-host", "net-tools", "git", "nvme-cli"]
ip_forwarding=no
ipv6=yes

# only this is supported for now (set to 'none' to do nothing to time setup on a given host)
timesync_method=chrony
# use an on-site NTP server rather than going across the internet for it...
ntp_server_onsite=['192.168.2.1']
# see the chrony.conf file for what this means. Not required, but provides redundancy if you want it
#ntp_server_pool=[{"fqdn": "ntp.ubuntu.com"}, {"fqdn": "0.ubuntu.pool.ntp.org", "max_sources": 1}]

# only this is supported for now (set to 'none' to do nothing to dns resolution on a given host)
dns_method=systemd-resolved
dns_primary_servers=['192.168.2.1']
dns_fallback_servers=['1.1.1.1']
dns_multicast=no
dns_cache=yes

# apt setup for [all] target hosts (will also obey ipv4/ipv6 settings)
apt_install_recommends=yes
apt_disable_esm=yes
apt={"mirror": "http://au.sbcmirror.org/armbian/apt", "distro_name": "noble"}
apt_proxy={"http": "http://192.168.2.1:3128", "https": "http://192.168.2.1:3128"}
